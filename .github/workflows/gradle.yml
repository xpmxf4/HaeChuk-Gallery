# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
      - name: Deploy to EC2
        run: |
          # GitHub Secrets에서 EC2 SSH 키를 파일로 생성합니다.
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_ssh_key.pem
          chmod 600 ec2_ssh_key.pem

          # 생성된 키 파일을 사용하여 EC2 인스턴스로 파일을 전송합니다.
          scp -i ec2_ssh_key.pem ./build/libs/HaeChukGael.jar ubuntu@ec2-3-38-201-172.ap-northeast-2.compute.amazonaws.com:~/

          # EC2 인스턴스에서 애플리케이션을 재시작합니다.
          ssh -i ec2_ssh_key.pem ubuntu@ec2-3-38-201-172.ap-northeast-2.compute.amazonaws.com "sudo systemctl restart HaeChukGael"
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
